{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Projects/WorldCup/src/contexts/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setThemeState] = useState(() => {\n    // Check localStorage for saved theme preference\n    const savedTheme = localStorage.getItem('worldcup-theme');\n    if (savedTheme && (savedTheme === 'light' || savedTheme === 'dark')) {\n      return savedTheme;\n    }\n    // Default to dark theme\n    return 'dark';\n  });\n  const toggleTheme = () => {\n    setThemeState(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  const setTheme = newTheme => {\n    setThemeState(newTheme);\n  };\n  useEffect(() => {\n    // Save theme preference to localStorage\n    localStorage.setItem('worldcup-theme', theme);\n\n    // Apply theme to document body\n    document.body.setAttribute('data-theme', theme);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"HQUyIuqHV7avI6PwpcCEjlYQxVw=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","useTheme","_s","context","Error","ThemeProvider","children","_s2","theme","setThemeState","savedTheme","localStorage","getItem","toggleTheme","prev","setTheme","newTheme","setItem","document","body","setAttribute","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brian/Projects/WorldCup/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nexport type Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setThemeState] = useState<Theme>(() => {\n    // Check localStorage for saved theme preference\n    const savedTheme = localStorage.getItem('worldcup-theme') as Theme;\n    if (savedTheme && (savedTheme === 'light' || savedTheme === 'dark')) {\n      return savedTheme;\n    }\n    // Default to dark theme\n    return 'dark';\n  });\n\n  const toggleTheme = () => {\n    setThemeState(prev => prev === 'light' ? 'dark' : 'light');\n  };\n\n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n  };\n\n  useEffect(() => {\n    // Save theme preference to localStorage\n    localStorage.setItem('worldcup-theme', theme);\n    \n    // Apply theme to document body\n    document.body.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU9E,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGT,UAAU,CAACK,YAAY,CAAC;EACxC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAYrB,OAAO,MAAMI,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3E,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAQ,MAAM;IACnD;IACA,MAAMe,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAU;IAClE,IAAIF,UAAU,KAAKA,UAAU,KAAK,OAAO,IAAIA,UAAU,KAAK,MAAM,CAAC,EAAE;MACnE,OAAOA,UAAU;IACnB;IACA;IACA,OAAO,MAAM;EACf,CAAC,CAAC;EAEF,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBJ,aAAa,CAACK,IAAI,IAAIA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAC5D,CAAC;EAED,MAAMC,QAAQ,GAAIC,QAAe,IAAK;IACpCP,aAAa,CAACO,QAAQ,CAAC;EACzB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd;IACAe,YAAY,CAACM,OAAO,CAAC,gBAAgB,EAAET,KAAK,CAAC;;IAE7C;IACAU,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC,YAAY,EAAEZ,KAAK,CAAC;EACjD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEV,OAAA,CAACC,YAAY,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEd,KAAK;MAAEK,WAAW;MAAEE;IAAS,CAAE;IAAAT,QAAA,EAC5DA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACnB,GAAA,CAhCWF,aAA2C;AAAAsB,EAAA,GAA3CtB,aAA2C;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}