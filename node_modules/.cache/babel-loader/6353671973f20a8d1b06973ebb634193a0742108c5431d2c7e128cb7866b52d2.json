{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Projects/WorldCup/src/components/TestControls.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Button, Card, Flex } from './styled/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestControlsContainer = styled(Card)`\n  background: rgba(245, 158, 11, 0.1);\n  border: 1px solid rgba(245, 158, 11, 0.3);\n  margin-bottom: 2rem;\n`;\n_c = TestControlsContainer;\nconst TestTitle = styled.h3`\n  color: #f59e0b;\n  margin: 0 0 1rem 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n`;\n_c2 = TestTitle;\nconst TestDescription = styled.p`\n  color: var(--text-secondary);\n  margin: 0 0 1rem 0;\n  font-size: 0.875rem;\n`;\n_c3 = TestDescription;\nconst TestControls = ({\n  onAutoPickPlayIn,\n  onAutoAdvanceBracket,\n  onResetTournament,\n  currentRound,\n  isPlayInComplete\n}) => {\n  return /*#__PURE__*/_jsxDEV(TestControlsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TestTitle, {\n      children: \"\\uD83E\\uDDEA Test Controls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestDescription, {\n      children: \"Use these controls to quickly test the tournament flow. Auto-pick will randomly select teams and advance through rounds.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      gap: \"1rem\",\n      style: {\n        flexWrap: 'wrap'\n      },\n      children: [!isPlayInComplete && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"warning\",\n        onClick: onAutoPickPlayIn,\n        children: \"\\uD83C\\uDFB2 Auto-Pick Play-in Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), isPlayInComplete && currentRound <= 5 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"warning\",\n        onClick: onAutoAdvanceBracket,\n        children: \"\\uD83D\\uDE80 Auto-Advance Bracket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: onResetTournament,\n        children: \"\\uD83D\\uDD04 Reset Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c4 = TestControls;\nexport default TestControls;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TestControlsContainer\");\n$RefreshReg$(_c2, \"TestTitle\");\n$RefreshReg$(_c3, \"TestDescription\");\n$RefreshReg$(_c4, \"TestControls\");","map":{"version":3,"names":["React","styled","Button","Card","Flex","jsxDEV","_jsxDEV","TestControlsContainer","_c","TestTitle","h3","_c2","TestDescription","p","_c3","TestControls","onAutoPickPlayIn","onAutoAdvanceBracket","onResetTournament","currentRound","isPlayInComplete","children","fileName","_jsxFileName","lineNumber","columnNumber","gap","style","flexWrap","variant","onClick","_c4","$RefreshReg$"],"sources":["/Users/brian/Projects/WorldCup/src/components/TestControls.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Button, Card, Flex } from './styled/Common';\n\ninterface TestControlsProps {\n  onAutoPickPlayIn: () => void;\n  onAutoAdvanceBracket: () => void;\n  onResetTournament: () => void;\n  currentRound: number;\n  isPlayInComplete: boolean;\n}\n\nconst TestControlsContainer = styled(Card)`\n  background: rgba(245, 158, 11, 0.1);\n  border: 1px solid rgba(245, 158, 11, 0.3);\n  margin-bottom: 2rem;\n`;\n\nconst TestTitle = styled.h3`\n  color: #f59e0b;\n  margin: 0 0 1rem 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n`;\n\nconst TestDescription = styled.p`\n  color: var(--text-secondary);\n  margin: 0 0 1rem 0;\n  font-size: 0.875rem;\n`;\n\nconst TestControls: React.FC<TestControlsProps> = ({\n  onAutoPickPlayIn,\n  onAutoAdvanceBracket,\n  onResetTournament,\n  currentRound,\n  isPlayInComplete\n}) => {\n  return (\n    <TestControlsContainer>\n      <TestTitle>ðŸ§ª Test Controls</TestTitle>\n      <TestDescription>\n        Use these controls to quickly test the tournament flow. \n        Auto-pick will randomly select teams and advance through rounds.\n      </TestDescription>\n      \n      <Flex gap=\"1rem\" style={{ flexWrap: 'wrap' }}>\n        {!isPlayInComplete && (\n          <Button\n            variant=\"warning\"\n            onClick={onAutoPickPlayIn}\n          >\n            ðŸŽ² Auto-Pick Play-in Teams\n          </Button>\n        )}\n        \n        {isPlayInComplete && currentRound <= 5 && (\n          <Button\n            variant=\"warning\"\n            onClick={onAutoAdvanceBracket}\n          >\n            ðŸš€ Auto-Advance Bracket\n          </Button>\n        )}\n        \n        <Button\n          variant=\"danger\"\n          onClick={onResetTournament}\n        >\n          ðŸ”„ Reset Tournament\n        </Button>\n      </Flex>\n    </TestControlsContainer>\n  );\n};\n\nexport default TestControls;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUrD,MAAMC,qBAAqB,GAAGN,MAAM,CAACE,IAAI,CAAC;AAC1C;AACA;AACA;AACA,CAAC;AAACK,EAAA,GAJID,qBAAqB;AAM3B,MAAME,SAAS,GAAGR,MAAM,CAACS,EAAE;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,SAAS;AAOf,MAAMG,eAAe,GAAGX,MAAM,CAACY,CAAC;AAChC;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,eAAe;AAMrB,MAAMG,YAAyC,GAAGA,CAAC;EACjDC,gBAAgB;EAChBC,oBAAoB;EACpBC,iBAAiB;EACjBC,YAAY;EACZC;AACF,CAAC,KAAK;EACJ,oBACEd,OAAA,CAACC,qBAAqB;IAAAc,QAAA,gBACpBf,OAAA,CAACG,SAAS;MAAAY,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACvCnB,OAAA,CAACM,eAAe;MAAAS,QAAA,EAAC;IAGjB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,eAElBnB,OAAA,CAACF,IAAI;MAACsB,GAAG,EAAC,MAAM;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAP,QAAA,GAC1C,CAACD,gBAAgB,iBAChBd,OAAA,CAACJ,MAAM;QACL2B,OAAO,EAAC,SAAS;QACjBC,OAAO,EAAEd,gBAAiB;QAAAK,QAAA,EAC3B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,EAEAL,gBAAgB,IAAID,YAAY,IAAI,CAAC,iBACpCb,OAAA,CAACJ,MAAM;QACL2B,OAAO,EAAC,SAAS;QACjBC,OAAO,EAAEb,oBAAqB;QAAAI,QAAA,EAC/B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,eAEDnB,OAAA,CAACJ,MAAM;QACL2B,OAAO,EAAC,QAAQ;QAChBC,OAAO,EAAEZ,iBAAkB;QAAAG,QAAA,EAC5B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE5B,CAAC;AAACM,GAAA,GA3CIhB,YAAyC;AA6C/C,eAAeA,YAAY;AAAC,IAAAP,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}