{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Projects/WorldCup/src/components/BracketLines.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BracketLine = styled.div`\n  position: absolute;\n  pointer-events: none;\n  z-index: 1;\n  \n  /* Horizontal line to next round */\n  &::before {\n    content: '';\n    position: absolute;\n    right: -1rem;\n    top: 50%;\n    width: 1rem;\n    height: 2px;\n    background: ${props => props.isCurrentRound ? 'var(--border-color)' : 'transparent'};\n    display: block;\n  }\n  \n  /* Vertical line for bracket connections */\n  &::after {\n    content: '';\n    position: absolute;\n    right: -1rem;\n    top: ${props => {\n  const {\n    matchIndex,\n    totalMatches\n  } = props;\n  const isEven = matchIndex % 2 === 0;\n  const isFirstHalf = matchIndex < totalMatches / 2;\n  if (isEven) {\n    return isFirstHalf ? '0' : '100%';\n  } else {\n    return '50%';\n  }\n}};\n    width: 2px;\n    height: ${props => {\n  const {\n    matchIndex,\n    totalMatches\n  } = props;\n  const isEven = matchIndex % 2 === 0;\n  const isFirstHalf = matchIndex < totalMatches / 2;\n  if (isEven) {\n    return isFirstHalf ? '50%' : '50%';\n  } else {\n    return '100%';\n  }\n}};\n    background: ${props => props.isCurrentRound ? 'var(--border-color)' : 'transparent'};\n    display: block;\n  }\n`;\n_c = BracketLine;\nconst BracketLines = ({\n  roundIndex,\n  matchIndex,\n  totalMatches,\n  isCurrentRound\n}) => {\n  return /*#__PURE__*/_jsxDEV(BracketLine, {\n    roundIndex: roundIndex,\n    matchIndex: matchIndex,\n    totalMatches: totalMatches,\n    isCurrentRound: isCurrentRound\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c2 = BracketLines;\nexport default BracketLines;\nvar _c, _c2;\n$RefreshReg$(_c, \"BracketLine\");\n$RefreshReg$(_c2, \"BracketLines\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","BracketLine","div","props","isCurrentRound","matchIndex","totalMatches","isEven","isFirstHalf","_c","BracketLines","roundIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/brian/Projects/WorldCup/src/components/BracketLines.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface BracketLinesProps {\n  roundIndex: number;\n  matchIndex: number;\n  totalMatches: number;\n  isCurrentRound: boolean;\n}\n\nconst BracketLine = styled.div<{ \n  roundIndex: number;\n  matchIndex: number;\n  totalMatches: number;\n  isCurrentRound: boolean;\n}>`\n  position: absolute;\n  pointer-events: none;\n  z-index: 1;\n  \n  /* Horizontal line to next round */\n  &::before {\n    content: '';\n    position: absolute;\n    right: -1rem;\n    top: 50%;\n    width: 1rem;\n    height: 2px;\n    background: ${props => props.isCurrentRound ? 'var(--border-color)' : 'transparent'};\n    display: block;\n  }\n  \n  /* Vertical line for bracket connections */\n  &::after {\n    content: '';\n    position: absolute;\n    right: -1rem;\n    top: ${props => {\n      const { matchIndex, totalMatches } = props;\n      const isEven = matchIndex % 2 === 0;\n      const isFirstHalf = matchIndex < totalMatches / 2;\n      \n      if (isEven) {\n        return isFirstHalf ? '0' : '100%';\n      } else {\n        return '50%';\n      }\n    }};\n    width: 2px;\n    height: ${props => {\n      const { matchIndex, totalMatches } = props;\n      const isEven = matchIndex % 2 === 0;\n      const isFirstHalf = matchIndex < totalMatches / 2;\n      \n      if (isEven) {\n        return isFirstHalf ? '50%' : '50%';\n      } else {\n        return '100%';\n      }\n    }};\n    background: ${props => props.isCurrentRound ? 'var(--border-color)' : 'transparent'};\n    display: block;\n  }\n`;\n\nconst BracketLines: React.FC<BracketLinesProps> = ({ \n  roundIndex, \n  matchIndex, \n  totalMatches, \n  isCurrentRound \n}) => {\n  return (\n    <BracketLine\n      roundIndex={roundIndex}\n      matchIndex={matchIndex}\n      totalMatches={totalMatches}\n      isCurrentRound={isCurrentRound}\n    />\n  );\n};\n\nexport default BracketLines;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASvC,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAKzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBC,KAAK,IAAIA,KAAK,CAACC,cAAc,GAAG,qBAAqB,GAAG,aAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWD,KAAK,IAAI;EACd,MAAM;IAAEE,UAAU;IAAEC;EAAa,CAAC,GAAGH,KAAK;EAC1C,MAAMI,MAAM,GAAGF,UAAU,GAAG,CAAC,KAAK,CAAC;EACnC,MAAMG,WAAW,GAAGH,UAAU,GAAGC,YAAY,GAAG,CAAC;EAEjD,IAAIC,MAAM,EAAE;IACV,OAAOC,WAAW,GAAG,GAAG,GAAG,MAAM;EACnC,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF,CAAC;AACL;AACA,cAAcL,KAAK,IAAI;EACjB,MAAM;IAAEE,UAAU;IAAEC;EAAa,CAAC,GAAGH,KAAK;EAC1C,MAAMI,MAAM,GAAGF,UAAU,GAAG,CAAC,KAAK,CAAC;EACnC,MAAMG,WAAW,GAAGH,UAAU,GAAGC,YAAY,GAAG,CAAC;EAEjD,IAAIC,MAAM,EAAE;IACV,OAAOC,WAAW,GAAG,KAAK,GAAG,KAAK;EACpC,CAAC,MAAM;IACL,OAAO,MAAM;EACf;AACF,CAAC;AACL,kBAAkBL,KAAK,IAAIA,KAAK,CAACC,cAAc,GAAG,qBAAqB,GAAG,aAAa;AACvF;AACA;AACA,CAAC;AAACK,EAAA,GArDIR,WAAW;AAuDjB,MAAMS,YAAyC,GAAGA,CAAC;EACjDC,UAAU;EACVN,UAAU;EACVC,YAAY;EACZF;AACF,CAAC,KAAK;EACJ,oBACEJ,OAAA,CAACC,WAAW;IACVU,UAAU,EAAEA,UAAW;IACvBN,UAAU,EAAEA,UAAW;IACvBC,YAAY,EAAEA,YAAa;IAC3BF,cAAc,EAAEA;EAAe;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEN,CAAC;AAACC,GAAA,GAdIN,YAAyC;AAgB/C,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}